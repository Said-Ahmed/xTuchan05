"""add roles to users

Revision ID: 41cbccb8e384
Revises: 3a9235ade3b7
Create Date: 2025-05-22 13:37:35.942820

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '41cbccb8e384'
down_revision: Union[str, None] = '3a9235ade3b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('schedule_id', sa.String(), nullable=True),
    sa.Column('delivery_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('order_id', sa.String(), nullable=True),
    sa.Column('product', sa.String(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('role', sa.Enum('user', 'courier', 'chef', 'admin', name='roleenum'), server_default='user', nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'role')
    op.create_table('trip',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('trip_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plane', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('town_from', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('town_to', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('time_out', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('time_in', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='trip_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='trip_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('company',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('company_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='company_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('passenger',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('passenger_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='passenger_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pass_in_trip',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('passenger_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('place', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], name='pass_in_trip_passenger_id_fkey'),
    sa.ForeignKeyConstraint(['trip_id'], ['trip.id'], name='pass_in_trip_trip_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pass_in_trip_pkey')
    )
    op.drop_table('order_items')
    op.drop_table('orders')
    # ### end Alembic commands ###
